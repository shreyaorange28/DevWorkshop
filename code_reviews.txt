1. Check out the code reviewer guidelines for software engineers at Yelp and Microsoft (Visual Studio Mobile team). What concepts are similar between the companies (List at least two)? What are some key differences (List at least two)? In general, what items should be present in a code review checklist for a development team?
Both companies emphasize picking the right reviewer and making sure they don't easily succumb to pressure and approve everything or bottleneck the process when it should continue. Another similarity is that both companies emphasize the importance of communication between the reviewer and the coder. They also have a similar etiquette for review. Both emphasize that smaller is better.

The Microsoft code review focuses more on not taking any changes personally. Yelp states that code reviews should have a primary reviewer.

2. Find an example of a "good" code review. Provide a link to the review and explain why you found the review beneficial.
https://codereview.stackexchange.com/questions/290967/beginner-rust-todo-app. The review broke down the user's request in multiple, easy to read parts, that explained the reviewers understanding.
Before giving a fixed code snippet, the reviewer wrote and explained every change. They even gave further ideas for the user to implemment.


3. Find an example of a "bad" code review. Provide a link to the review and briefly explain why you found the review not beneficial. In addition, include recommendations for improvement to the review feedback.
https://codereview.stackexchange.com/questions/291356/is-this-a-correct-implementation-of-comparator
In the top voted answer for this question, the reviewer states that the person who asked the question shouldn't do create custom code and their mutation is too high before just giving the answer to them. They do not provide any reasoning behind their recommendations or any comments explaining the code.
